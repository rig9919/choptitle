#!/usr/bin/env python
import os
import sys
import argparse
import subprocess
import shlex
from datetime import timedelta

__version__ = "1.2"

def init_parser():
    parser = argparse.ArgumentParser(prog='choptitle', add_help=False,
               usage='%(prog)s [mop] duration [file]',
               description='Reads output generated by findscreen and creates '
                           'a new video in the current directory with the '
                           'segment removed.')
    parser.add_argument('duration', type=int,
             help='Duration of the title sequence')
    parser.add_argument('file', nargs='?', default='',
           help='Output generated by findscreen. Reads from stdin if missing.')
    parser.add_argument('-m', '--measurement', choices=['hh','hist','hash'],
           default='hh')
    parser.add_argument('-p', '--preview', action='store_true')
    parser.add_argument('-o', '--offset', type=int, default=0, metavar='X')
    parser.add_argument('-v', '--version', action='version', version=__version__)
    parser.add_argument('-h', '--help', action='help')
    args = parser.parse_args()
    return args

if __name__=='__main__':
    args = init_parser()

    if args.file:
        source = open(args.file)
    else:
        source = sys.stdin

    for line in source:
        vid, iframe, timestamp, measure_name, measure = line.split(':')
        if not measure_name == args.measurement:
            continue
        outfile = os.path.splitext(os.path.basename(vid))[0] + '.mkv'
        begin = float(timestamp) + args.offset
        end = begin + args.duration
        if args.preview:
            cmd = "ffplay '%s' -ss %f -t %d" % (vid, begin, args.duration)
        else:
            cmd = "mkvmerge -o './%s' --split parts:-%s,+%s- '%s'" % (outfile, timedelta(seconds=begin), timedelta(seconds=end), vid)
        subprocess.Popen(shlex.split(cmd)).wait()
