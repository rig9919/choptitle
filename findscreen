#! /bin/bash
source ~/src/choptitle/common.sh

show_help() {
	echo "usage: findscreen [-l] -s <screen> <videos...>"
	echo "options:"
	echo "    -l, --limit"
	echo "        position (seconds) in video to stop searching for screen"
	exit
}

tmp_path="/var/tmp/findscreen"
limit=200
screens=()

while true; do
	case "$1" in
		-l|--search-limit)
			shift
			limit="$1"
			shift;;
		-s|--screen)
			shift
			screens+=("$1")
			shift;;
		-v|--version)
			echo "$VERSION"
			exit;;
		-h|--help)
			show_help
			exit;;
		-*)
			echo "findscreen: unrecognized command $1" >&2
			exit -1;;
		*)
			break;;
	esac
done

INFILES=("$@")

if [[ $limit == *[!0-9]* ]]; then
	echo "findscreen: bad limit" >&2
	exit -1
fi

if [ ${#screens[@]} -eq 0 ]; then
	echo "findscreen: must specifiy at least one screen" >&2
	exit -1
fi

for s in "${screens[@]}"; do
	if [ ! -f "$s" ]; then
		echo "findscreen: screen \"$s\" not found" >&2
		exit -1
	fi
done

if [ ${#INFILES[@]} -eq 0 ]; then
	echo "findscreen: must specifiy at least one video" >&2
	exit -1
fi

for v in "${INFILES[@]}"; do
	if [ ! -f "$v" ]; then
		echo "findscreen: video \"$v\" not found" >&2
		exit -1
	fi
done

if [ -d "$tmp_path" ]; then
	rm -rf "$tmp_path/*.bmp"
else
	mkdir "$tmp_path"
fi
if [ ! -d "$tmp_path" ]; then
	echo "findscreen: temporary path could not be created" >&2
	exit -1
fi

i=1

for INFILE in "${INFILES[@]}"; do
	printf "$INFILE:"
	for screen in "${screens[@]}"; do
		list_iframes "$INFILE" | while read timestamp; do
			if (( $(echo "$timestamp > $limit" | bc -l) )); then
				break
			fi
			file="$(printf $tmp_path/%05d.bmp $i)"
			imghash="$(./hashcompare.py $screen $file | cut -d':' -f2)"
			printf "%05d:%s:%02d\n" $i $timestamp $imghash
			last_timestamp=$timestamp
			let i=i+1
		done #| sort -t ":" -n -k 3 | head -n1
	#	ffmpeg -ss $(convertsecs $timestamp) -i "$INFILE" -y -f image2 -vcodec mjpeg -vframes 1 $TARGETPATH/$(basename -z -s .mkv $(basename -z "$INFILE")).jpg
	done | sort -t ":" -n -k 3 | head -n1
done
