#! /bin/bash

VERSION="1.1"

convertsecs() {
    h=$(echo "$1/3600" | bc)
    m=$(echo "scale=0; ($1%3600)/60" | bc)
    s=$(echo "scale=4; $1 - (($h*3600) + ($m*60))" | bc)
    printf "%02d:%02d:%f\n" $h $m $s
}

show_help() {
	echo "usage: choptitle [po] <length>"
	echo "options:"
	echo "    -p, --preview"
	echo "        just preview the portion that would be chopped"
	echo "    -o, --offset"
	echo "        distance (seconds) from beginning of segment to be removed"
	exit
}

preview_flag=0
offset="0.0"
while true; do
	case "$1" in
		-p|--preview)
			preview_flag=1
			shift;;
		-o|--offset)
			shift
			offset="$1"
			shift;;
		-v|--version)
			echo "$VERSION"
			exit;;
		-h|--help)
			show_help
			exit;;
		-*)
			echo "choptitle: unrecognized option $1" >&2
			exit -1;;
		*)
			break;;
	esac
done
if [[ "$1" == "" ]]; then
	echo "choptitle: no length specified"
	exit -1
fi
title_length="$1"

safe_room="0.1" # seconds after the start of the title and before the end
                # to make it more likely that we arent cutting at an
                # I-frame that contains show content

while read line; do
	file=$(echo "$line" | cut -d':' -f1)
	filename=$(basename -z -s .mkv "$file")
	begintitle=$(echo "$line" | cut -d':' -f3)
	begintitle=$(echo "scale=4; $begintitle + $offset + $safe_room" | bc)
	endtitle=$(echo "scale=4; $begintitle + $title_length - $safe_room" | bc)
	echo "$file		$begintitle"
	if [ $preview_flag -eq 1 ]; then
		ffplay "$file" -ss $begintitle -t $title_length
	else
		#ffmpeg -i "$file" -t $begintitle -acodec copy -vcodec copy ./$filename-begin.mkv
		#ffmpeg -i "$file" -ss $endtitle -acodec copy -vcodec copy ./$filename-end.mkv
#		ffmpeg -f concat -i <(printf "file '%s\nfile %s\n'" $filename-begin.mkv $filename-end.mkv) -acodec copy -vcodec copy ./$filename.mkv
		#mkvmerge -o ./$filename.mkv $filename-begin.mkv +$filename-end.mkv
		mkvmerge -o ./$filename.mkv --split parts:-$(convertsecs ${begintitle}),+$(convertsecs ${endtitle})- "$file"
		#rm $filename-*.mkv
	fi
done
